{
  "collection": {
    "item": [
      {
        "id": "33120b2e-5287-44ad-a4e3-330af6d3ba97",
        "name": "Health Check",
        "request": {
          "url": {
            "path": [
              "health"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "142a37c7-1009-4ee5-8bea-d7cfe0d586a9",
              "type": "text/javascript",
              "exec": [
                "pm.test('‚úÖ Health check returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('‚úÖ Health check response format', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('status');",
                "    pm.expect(response).to.have.property('database');",
                "});"
              ],
              "_lastExecutionId": "3a4021f8-3951-48d8-96ef-32213b319d99"
            }
          }
        ]
      },
      {
        "id": "77d1d128-ad71-418a-961f-23f45bad253e",
        "name": "Create Project",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "projects"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "{{content_type}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"Test Project\",\n  \"description\": \"A test project for API validation\",\n  \"settings\": {\n    \"priority\": \"high\",\n    \"category\": \"testing\"\n  }\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "67e448f5-a833-4d55-bf31-f1c24668cd01",
              "type": "text/javascript",
              "exec": [
                "pm.test('‚úÖ Project created successfully', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('‚úÖ Project response format', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('id');",
                "    pm.expect(response).to.have.property('name');",
                "    pm.collectionVariables.set('project_id', response.id);",
                "    console.log('üìù Created project ID:', response.id);",
                "});"
              ],
              "_lastExecutionId": "bf981776-2e5e-434f-88cb-f61947332290"
            }
          }
        ]
      },
      {
        "id": "0909eb87-976b-4f67-a755-e195a808b36a",
        "name": "Get Projects",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "projects"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [
              {
                "key": "skip",
                "value": "0"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8d420614-2169-423c-8852-7fe3b1810621",
              "type": "text/javascript",
              "exec": [
                "pm.test('‚úÖ Get projects returns 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('‚úÖ Pagination response format', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('items');",
                "    pm.expect(response).to.have.property('total');",
                "    pm.expect(response).to.have.property('page');",
                "    pm.expect(response.items).to.be.an('array');",
                "    pm.expect(response.total).to.be.at.least(1);",
                "});"
              ],
              "_lastExecutionId": "5be1eb19-cf1b-4d3b-864d-096855f0ebf9"
            }
          }
        ]
      },
      {
        "id": "b6689602-8651-4eb0-844e-76ce2b280061",
        "name": "Create Agent Type",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "agents",
              "types"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "{{content_type}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"Product Owner\",\n  \"description\": \"AI Product Owner agent for requirements gathering\",\n  \"capabilities\": {\n    \"skills\": [\"requirements_analysis\", \"user_story_creation\", \"stakeholder_communication\"],\n    \"tools\": [\"jira\", \"slack\", \"openai\"],\n    \"integrations\": [\"atlassian\", \"slack_api\"]\n  },\n  \"workflow_preferences\": {\n    \"communication_style\": \"collaborative\",\n    \"work_hours\": \"24/7\"\n  },\n  \"default_config\": {\n    \"max_concurrent_projects\": 3,\n    \"response_time_sla\": \"5min\"\n  }\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ff357a0a-6787-4f67-af8c-181cc12f05ee",
              "type": "text/javascript",
              "exec": [
                "pm.test('‚úÖ Agent type created successfully', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('‚úÖ Agent type response format', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('id');",
                "    pm.expect(response).to.have.property('name');",
                "    pm.collectionVariables.set('agent_type_id', response.id);",
                "    console.log('ü§ñ Created agent type ID:', response.id);",
                "});"
              ],
              "_lastExecutionId": "a7e4bf6b-9453-458b-ad88-f96a0473a4f1"
            }
          }
        ]
      },
      {
        "id": "d1d9b9f9-0e68-4921-a526-54e444ef75eb",
        "name": "Create Agent",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "agents"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "{{content_type}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"AgentIan\",\n  \"agent_type_id\": {{agent_type_id}},\n  \"description\": \"Primary Product Owner agent for project requirements\",\n  \"configuration\": {\n    \"slack_channel\": \"#agent-team\",\n    \"jira_project\": \"AT\",\n    \"openai_model\": \"gpt-4o-mini\"\n  },\n  \"status\": \"active\",\n  \"workload_capacity\": 100,\n  \"specializations\": {\n    \"domains\": [\"software_development\", \"project_management\"],\n    \"industries\": [\"technology\", \"startup\"]\n  },\n  \"credentials\": {\n    \"jira_token\": \"redacted\",\n    \"slack_token\": \"redacted\"\n  }\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9a1ed8e4-9ed4-4a8f-960b-952234fe2ef2",
              "type": "text/javascript",
              "exec": [
                "pm.test('‚úÖ Agent created successfully', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('‚úÖ Agent response format', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('id');",
                "    pm.expect(response).to.have.property('name');",
                "    pm.expect(response).to.have.property('agent_type_id');",
                "    pm.collectionVariables.set('agent_id', response.id);",
                "    console.log('ü§ñ Created agent ID:', response.id);",
                "});"
              ],
              "_lastExecutionId": "44983d03-a1da-4c54-bf9e-b940cc343a53"
            }
          }
        ]
      },
      {
        "id": "d1637fc8-0be4-4f3f-8c45-1a8f1163e6c2",
        "name": "Create Team",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "teams"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "{{content_type}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"Core Development Team\",\n  \"description\": \"Primary development team for AgentTeam project\",\n  \"project_id\": {{project_id}},\n  \"team_lead_id\": {{agent_id}},\n  \"configuration\": {\n    \"meeting_schedule\": \"daily_standup\",\n    \"communication_channels\": [\"slack\", \"jira\"]\n  }\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9fb6ddf0-768b-4d56-a510-dd7531a61eee",
              "type": "text/javascript",
              "exec": [
                "pm.test('‚úÖ Team created successfully', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('‚úÖ Team response format', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('id');",
                "    pm.expect(response).to.have.property('name');",
                "    pm.collectionVariables.set('team_id', response.id);",
                "    console.log('üë• Created team ID:', response.id);",
                "});"
              ],
              "_lastExecutionId": "dc3b0fd1-1293-4e51-90d9-05766629f7bf"
            }
          }
        ]
      },
      {
        "id": "4c9ac1e2-624f-482d-a49c-a653143a31a0",
        "name": "Create Workflow",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "workflows"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "{{content_type}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"Requirements Gathering Workflow\",\n  \"description\": \"Standard workflow for gathering and processing project requirements\",\n  \"project_id\": {{project_id}},\n  \"assigned_team_id\": {{team_id}},\n  \"primary_agent_id\": {{agent_id}},\n  \"definition\": {\n    \"nodes\": [\n      {\n        \"id\": \"start\",\n        \"type\": \"start\",\n        \"name\": \"Requirements Gathering Start\"\n      },\n      {\n        \"id\": \"analyze_goal\",\n        \"type\": \"task\",\n        \"name\": \"Analyze Project Goal\",\n        \"agent_type\": \"product_owner\"\n      },\n      {\n        \"id\": \"create_stories\",\n        \"type\": \"task\",\n        \"name\": \"Create User Stories\",\n        \"agent_type\": \"product_owner\"\n      },\n      {\n        \"id\": \"complete\",\n        \"type\": \"end\",\n        \"name\": \"Requirements Complete\"\n      }\n    ],\n    \"edges\": [\n      {\"from\": \"start\", \"to\": \"analyze_goal\"},\n      {\"from\": \"analyze_goal\", \"to\": \"create_stories\"},\n      {\"from\": \"create_stories\", \"to\": \"complete\"}\n    ]\n  },\n  \"agent_requirements\": {\n    \"required_agent_types\": [\"product_owner\"],\n    \"estimated_duration\": \"2-4 hours\"\n  },\n  \"status\": \"active\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0317bb92-f94a-4a26-b08b-05540fbcbec7",
              "type": "text/javascript",
              "exec": [
                "pm.test('‚úÖ Workflow created successfully', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('‚úÖ Workflow response format', function () {",
                "    const response = pm.response.json();",
                "    pm.expect(response).to.have.property('id');",
                "    pm.expect(response).to.have.property('name');",
                "    pm.expect(response).to.have.property('definition');",
                "    pm.collectionVariables.set('workflow_id', response.id);",
                "    console.log('‚ö° Created workflow ID:', response.id);",
                "});"
              ],
              "_lastExecutionId": "538c5642-31ce-4f51-9025-066e7f155611"
            }
          }
        ]
      },
      {
        "id": "139bcbbd-b782-445e-8bb4-1c90956ff293",
        "name": "Get API Documentation",
        "request": {
          "url": {
            "path": [
              "docs"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "545af7df-fb7f-4752-a152-3f4916a823ea",
              "type": "text/javascript",
              "exec": [
                "pm.test('‚úÖ API documentation accessible', function () {",
                "    pm.response.to.have.status(200);",
                "    pm.expect(pm.response.headers.get('content-type')).to.include('text/html');",
                "});",
                "",
                "console.log('üìö FastAPI documentation is available at /docs');"
              ],
              "_lastExecutionId": "ddba3724-6aa5-4488-89bc-7ffb414da865"
            }
          }
        ]
      }
    ],
    "auth": {
      "type": "noauth",
      "noauth": []
    },
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "4eb1ad12-7d0c-482e-a70e-c14f40834aa4",
          "type": "text/javascript",
          "exec": [
            "console.log('üöÄ FastAPI CRUD Test Suite Starting...');"
          ],
          "_lastExecutionId": "eb4c01a2-acd8-4984-beca-93f8706c89d8"
        }
      }
    ],
    "variable": [
      {
        "type": "any",
        "value": "",
        "key": "project_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "agent_type_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "agent_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "team_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "workflow_id"
      }
    ],
    "info": {
      "_postman_id": "caead472-2270-438b-951a-c581e22d9ab1",
      "name": "FastAPI CRUD Tests",
      "version": {
        "raw": "1.0.0",
        "major": 1,
        "minor": 0,
        "patch": 0,
        "prerelease": [],
        "build": [],
        "string": "1.0.0"
      },
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Test suite for Workflow Admin FastAPI CRUD endpoints",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment"
    },
    "id": "docker-env",
    "name": "Docker Development",
    "values": [
      {
        "type": "any",
        "value": "http://backend:8000",
        "key": "base_url"
      },
      {
        "type": "any",
        "value": "v1",
        "key": "api_version"
      },
      {
        "type": "any",
        "value": "5000",
        "key": "timeout"
      },
      {
        "type": "any",
        "value": "application/json",
        "key": "content_type"
      },
      {
        "type": "any",
        "value": "",
        "key": "auth_token"
      }
    ]
  },
  "globals": {
    "id": "5744c438-dcf8-438b-ac02-9062616b5239",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 8,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 16,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 8,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 8,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 8,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 15,
        "pending": 0,
        "failed": 1
      },
      "testScripts": {
        "total": 8,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 8,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 28.875,
      "responseMin": 7,
      "responseMax": 70,
      "responseSd": 21.877142752196868,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1756668949868,
      "completed": 1756668954428
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 8,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "54af06cd-f104-49c1-b018-632ebc732191",
          "httpRequestId": "88c7b64c-011c-47b9-a6c2-fa61a52e0454"
        },
        "item": {
          "id": "33120b2e-5287-44ad-a4e3-330af6d3ba97",
          "name": "Health Check",
          "request": {
            "url": {
              "path": [
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "142a37c7-1009-4ee5-8bea-d7cfe0d586a9",
                "type": "text/javascript",
                "exec": [
                  "pm.test('‚úÖ Health check returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('‚úÖ Health check response format', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(response).to.have.property('database');",
                  "});"
                ],
                "_lastExecutionId": "3a4021f8-3951-48d8-96ef-32213b319d99"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "health"
            ],
            "host": [
              "backend"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "770cdc3e-6de0-40be-8f28-97304671ad04",
              "system": true
            },
            {
              "key": "Host",
              "value": "backend:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "88f9a76a-3041-4acc-84dc-677412baa252",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 31 Aug 2025 19:35:49 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "109"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              121,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              34,
              58,
              123,
              34,
              108,
              111,
              99,
              97,
              108,
              95,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              105,
              111,
              110,
              95,
              111,
              107,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              58,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              45,
              97,
              100,
              109,
              105,
              110,
              45,
              97,
              112,
              105,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              46,
              48,
              46,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 60,
          "responseSize": 109
        },
        "id": "33120b2e-5287-44ad-a4e3-330af6d3ba97",
        "assertions": [
          {
            "assertion": "‚úÖ Health check returns 200",
            "skipped": false
          },
          {
            "assertion": "‚úÖ Health check response format",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2304e467-79cf-493f-8fe6-794cde725f6e",
          "length": 8,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c0e535b7-0e8c-466a-8a6d-0ee55acd426a"
        },
        "item": {
          "id": "77d1d128-ad71-418a-961f-23f45bad253e",
          "name": "Create Project",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "projects"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "{{content_type}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Project\",\n  \"description\": \"A test project for API validation\",\n  \"settings\": {\n    \"priority\": \"high\",\n    \"category\": \"testing\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "67e448f5-a833-4d55-bf31-f1c24668cd01",
                "type": "text/javascript",
                "exec": [
                  "pm.test('‚úÖ Project created successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('‚úÖ Project response format', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('name');",
                  "    pm.collectionVariables.set('project_id', response.id);",
                  "    console.log('üìù Created project ID:', response.id);",
                  "});"
                ],
                "_lastExecutionId": "bf981776-2e5e-434f-88cb-f61947332290"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "projects"
            ],
            "host": [
              "backend"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "950f2c32-4913-4c97-a3fd-156d9d010614",
              "system": true
            },
            {
              "key": "Host",
              "value": "backend:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "153",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"Test Project\",\n  \"description\": \"A test project for API validation\",\n  \"settings\": {\n    \"priority\": \"high\",\n    \"category\": \"testing\"\n  }\n}"
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "f2ac8cd0-1a35-4955-a86f-3fcdc8af6851",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 31 Aug 2025 19:35:50 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "185"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              51,
              49,
              84,
              49,
              57,
              58,
              51,
              53,
              58,
              53,
              49,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              32,
              80,
              114,
              111,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              65,
              32,
              116,
              101,
              115,
              116,
              32,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              32,
              102,
              111,
              114,
              32,
              65,
              80,
              73,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              101,
              116,
              116,
              105,
              110,
              103,
              115,
              34,
              58,
              123,
              34,
              112,
              114,
              105,
              111,
              114,
              105,
              116,
              121,
              34,
              58,
              34,
              104,
              105,
              103,
              104,
              34,
              44,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              50,
              125
            ]
          },
          "cookie": [],
          "responseTime": 70,
          "responseSize": 185
        },
        "id": "77d1d128-ad71-418a-961f-23f45bad253e",
        "assertions": [
          {
            "assertion": "‚úÖ Project created successfully",
            "skipped": false
          },
          {
            "assertion": "‚úÖ Project response format",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "de829513-082e-4808-ae48-b2d40dd51d3f",
          "length": 8,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7e3a6c5a-4cbf-4760-9c25-2f95304f1c5d"
        },
        "item": {
          "id": "0909eb87-976b-4f67-a755-e195a808b36a",
          "name": "Get Projects",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "projects"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "skip",
                  "value": "0"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d420614-2169-423c-8852-7fe3b1810621",
                "type": "text/javascript",
                "exec": [
                  "pm.test('‚úÖ Get projects returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('‚úÖ Pagination response format', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('items');",
                  "    pm.expect(response).to.have.property('total');",
                  "    pm.expect(response).to.have.property('page');",
                  "    pm.expect(response.items).to.be.an('array');",
                  "    pm.expect(response.total).to.be.at.least(1);",
                  "});"
                ],
                "_lastExecutionId": "5be1eb19-cf1b-4d3b-864d-096855f0ebf9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "projects"
            ],
            "host": [
              "backend"
            ],
            "query": [
              {
                "key": "skip",
                "value": "0"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "798c7800-5586-4c8d-acbc-85dd5050d04f",
              "system": true
            },
            {
              "key": "Host",
              "value": "backend:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "19e3efa9-0ec7-4400-bb96-cf3523998519",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 31 Aug 2025 19:35:50 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "387"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              51,
              49,
              84,
              49,
              55,
              58,
              49,
              55,
              58,
              53,
              50,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              32,
              80,
              114,
              111,
              106,
              101,
              99,
              116,
              32,
              49,
              55,
              53,
              54,
              54,
              54,
              48,
              54,
              55,
              50,
              56,
              55,
              55,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              65,
              32,
              116,
              101,
              115,
              116,
              32,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              32,
              102,
              111,
              114,
              32,
              65,
              80,
              73,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              101,
              116,
              116,
              105,
              110,
              103,
              115,
              34,
              58,
              123,
              34,
              112,
              114,
              105,
              111,
              114,
              105,
              116,
              121,
              34,
              58,
              34,
              104,
              105,
              103,
              104,
              34,
              44,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              51,
              49,
              84,
              49,
              57,
              58,
              51,
              53,
              58,
              53,
              49,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              32,
              80,
              114,
              111,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              65,
              32,
              116,
              101,
              115,
              116,
              32,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              32,
              102,
              111,
              114,
              32,
              65,
              80,
              73,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              101,
              116,
              116,
              105,
              110,
              103,
              115,
              34,
              58,
              123,
              34,
              112,
              114,
              105,
              111,
              114,
              105,
              116,
              121,
              34,
              58,
              34,
              104,
              105,
              103,
              104,
              34,
              44,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              50,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 7,
          "responseSize": 387
        },
        "id": "0909eb87-976b-4f67-a755-e195a808b36a",
        "assertions": [
          {
            "assertion": "‚úÖ Get projects returns 200",
            "skipped": false
          },
          {
            "assertion": "‚úÖ Pagination response format",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "‚úÖ Pagination response format",
              "message": "expected [ { ‚Ä¶(6) }, { ‚Ä¶(6) } ] to have property 'items'",
              "stack": "AssertionError: expected [ { ‚Ä¶(6) }, { ‚Ä¶(6) } ] to have property 'items'\n   at Object.eval sandbox-script.js:2:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "e8491107-8d3c-41d5-94cf-71929c0a6702",
          "length": 8,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ef4bcddc-2b52-4d4f-8199-0d7787f2a63e"
        },
        "item": {
          "id": "b6689602-8651-4eb0-844e-76ce2b280061",
          "name": "Create Agent Type",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "agents",
                "types"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "{{content_type}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Product Owner\",\n  \"description\": \"AI Product Owner agent for requirements gathering\",\n  \"capabilities\": {\n    \"skills\": [\"requirements_analysis\", \"user_story_creation\", \"stakeholder_communication\"],\n    \"tools\": [\"jira\", \"slack\", \"openai\"],\n    \"integrations\": [\"atlassian\", \"slack_api\"]\n  },\n  \"workflow_preferences\": {\n    \"communication_style\": \"collaborative\",\n    \"work_hours\": \"24/7\"\n  },\n  \"default_config\": {\n    \"max_concurrent_projects\": 3,\n    \"response_time_sla\": \"5min\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ff357a0a-6787-4f67-af8c-181cc12f05ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('‚úÖ Agent type created successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('‚úÖ Agent type response format', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('name');",
                  "    pm.collectionVariables.set('agent_type_id', response.id);",
                  "    console.log('ü§ñ Created agent type ID:', response.id);",
                  "});"
                ],
                "_lastExecutionId": "a7e4bf6b-9453-458b-ad88-f96a0473a4f1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "agents",
              "types"
            ],
            "host": [
              "backend"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "681c4dea-b74c-411c-b056-ee97145c4007",
              "system": true
            },
            {
              "key": "Host",
              "value": "backend:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "501",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"Product Owner\",\n  \"description\": \"AI Product Owner agent for requirements gathering\",\n  \"capabilities\": {\n    \"skills\": [\"requirements_analysis\", \"user_story_creation\", \"stakeholder_communication\"],\n    \"tools\": [\"jira\", \"slack\", \"openai\"],\n    \"integrations\": [\"atlassian\", \"slack_api\"]\n  },\n  \"workflow_preferences\": {\n    \"communication_style\": \"collaborative\",\n    \"work_hours\": \"24/7\"\n  },\n  \"default_config\": {\n    \"max_concurrent_projects\": 3,\n    \"response_time_sla\": \"5min\"\n  }\n}"
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "f9bf6938-8f92-4126-b19f-5554b39cc3f7",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 31 Aug 2025 19:35:51 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "501"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              51,
              49,
              84,
              49,
              57,
              58,
              51,
              53,
              58,
              53,
              50,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              80,
              114,
              111,
              100,
              117,
              99,
              116,
              32,
              79,
              119,
              110,
              101,
              114,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              65,
              73,
              32,
              80,
              114,
              111,
              100,
              117,
              99,
              116,
              32,
              79,
              119,
              110,
              101,
              114,
              32,
              97,
              103,
              101,
              110,
              116,
              32,
              102,
              111,
              114,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              109,
              101,
              110,
              116,
              115,
              32,
              103,
              97,
              116,
              104,
              101,
              114,
              105,
              110,
              103,
              34,
              44,
              34,
              99,
              97,
              112,
              97,
              98,
              105,
              108,
              105,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              115,
              107,
              105,
              108,
              108,
              115,
              34,
              58,
              91,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              109,
              101,
              110,
              116,
              115,
              95,
              97,
              110,
              97,
              108,
              121,
              115,
              105,
              115,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              115,
              116,
              111,
              114,
              121,
              95,
              99,
              114,
              101,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              107,
              101,
              104,
              111,
              108,
              100,
              101,
              114,
              95,
              99,
              111,
              109,
              109,
              117,
              110,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              93,
              44,
              34,
              116,
              111,
              111,
              108,
              115,
              34,
              58,
              91,
              34,
              106,
              105,
              114,
              97,
              34,
              44,
              34,
              115,
              108,
              97,
              99,
              107,
              34,
              44,
              34,
              111,
              112,
              101,
              110,
              97,
              105,
              34,
              93,
              44,
              34,
              105,
              110,
              116,
              101,
              103,
              114,
              97,
              116,
              105,
              111,
              110,
              115,
              34,
              58,
              91,
              34,
              97,
              116,
              108,
              97,
              115,
              115,
              105,
              97,
              110,
              34,
              44,
              34,
              115,
              108,
              97,
              99,
              107,
              95,
              97,
              112,
              105,
              34,
              93,
              125,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              112,
              114,
              101,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              109,
              109,
              117,
              110,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              95,
              115,
              116,
              121,
              108,
              101,
              34,
              58,
              34,
              99,
              111,
              108,
              108,
              97,
              98,
              111,
              114,
              97,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              95,
              104,
              111,
              117,
              114,
              115,
              34,
              58,
              34,
              50,
              52,
              47,
              55,
              34,
              125,
              44,
              34,
              100,
              101,
              102,
              97,
              117,
              108,
              116,
              95,
              99,
              111,
              110,
              102,
              105,
              103,
              34,
              58,
              123,
              34,
              109,
              97,
              120,
              95,
              99,
              111,
              110,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              34,
              58,
              51,
              44,
              34,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              95,
              116,
              105,
              109,
              101,
              95,
              115,
              108,
              97,
              34,
              58,
              34,
              53,
              109,
              105,
              110,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              105,
              115,
              95,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 20,
          "responseSize": 501
        },
        "id": "b6689602-8651-4eb0-844e-76ce2b280061",
        "assertions": [
          {
            "assertion": "‚úÖ Agent type created successfully",
            "skipped": false
          },
          {
            "assertion": "‚úÖ Agent type response format",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "40a4ab7b-f34e-4e23-b415-a7069b607bba",
          "length": 8,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b007df31-0a78-4078-b058-a2555010b733"
        },
        "item": {
          "id": "d1d9b9f9-0e68-4921-a526-54e444ef75eb",
          "name": "Create Agent",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "agents"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "{{content_type}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"AgentIan\",\n  \"agent_type_id\": {{agent_type_id}},\n  \"description\": \"Primary Product Owner agent for project requirements\",\n  \"configuration\": {\n    \"slack_channel\": \"#agent-team\",\n    \"jira_project\": \"AT\",\n    \"openai_model\": \"gpt-4o-mini\"\n  },\n  \"status\": \"active\",\n  \"workload_capacity\": 100,\n  \"specializations\": {\n    \"domains\": [\"software_development\", \"project_management\"],\n    \"industries\": [\"technology\", \"startup\"]\n  },\n  \"credentials\": {\n    \"jira_token\": \"redacted\",\n    \"slack_token\": \"redacted\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9a1ed8e4-9ed4-4a8f-960b-952234fe2ef2",
                "type": "text/javascript",
                "exec": [
                  "pm.test('‚úÖ Agent created successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('‚úÖ Agent response format', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('name');",
                  "    pm.expect(response).to.have.property('agent_type_id');",
                  "    pm.collectionVariables.set('agent_id', response.id);",
                  "    console.log('ü§ñ Created agent ID:', response.id);",
                  "});"
                ],
                "_lastExecutionId": "44983d03-a1da-4c54-bf9e-b940cc343a53"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "agents"
            ],
            "host": [
              "backend"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f99e2167-f120-44b8-81d7-b6ffbfaaf591",
              "system": true
            },
            {
              "key": "Host",
              "value": "backend:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "510",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"AgentIan\",\n  \"agent_type_id\": 2,\n  \"description\": \"Primary Product Owner agent for project requirements\",\n  \"configuration\": {\n    \"slack_channel\": \"#agent-team\",\n    \"jira_project\": \"AT\",\n    \"openai_model\": \"gpt-4o-mini\"\n  },\n  \"status\": \"active\",\n  \"workload_capacity\": 100,\n  \"specializations\": {\n    \"domains\": [\"software_development\", \"project_management\"],\n    \"industries\": [\"technology\", \"startup\"]\n  },\n  \"credentials\": {\n    \"jira_token\": \"redacted\",\n    \"slack_token\": \"redacted\"\n  }\n}"
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "6b2487a2-8857-4f19-ba4b-9d232b87d3ea",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 31 Aug 2025 19:35:51 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "1001"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              51,
              49,
              84,
              49,
              57,
              58,
              51,
              53,
              58,
              53,
              50,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              103,
              101,
              110,
              116,
              73,
              97,
              110,
              34,
              44,
              34,
              97,
              103,
              101,
              110,
              116,
              95,
              116,
              121,
              112,
              101,
              95,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              114,
              105,
              109,
              97,
              114,
              121,
              32,
              80,
              114,
              111,
              100,
              117,
              99,
              116,
              32,
              79,
              119,
              110,
              101,
              114,
              32,
              97,
              103,
              101,
              110,
              116,
              32,
              102,
              111,
              114,
              32,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              109,
              101,
              110,
              116,
              115,
              34,
              44,
              34,
              99,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              115,
              108,
              97,
              99,
              107,
              95,
              99,
              104,
              97,
              110,
              110,
              101,
              108,
              34,
              58,
              34,
              35,
              97,
              103,
              101,
              110,
              116,
              45,
              116,
              101,
              97,
              109,
              34,
              44,
              34,
              106,
              105,
              114,
              97,
              95,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              34,
              58,
              34,
              65,
              84,
              34,
              44,
              34,
              111,
              112,
              101,
              110,
              97,
              105,
              95,
              109,
              111,
              100,
              101,
              108,
              34,
              58,
              34,
              103,
              112,
              116,
              45,
              52,
              111,
              45,
              109,
              105,
              110,
              105,
              34,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              108,
              111,
              97,
              100,
              95,
              99,
              97,
              112,
              97,
              99,
              105,
              116,
              121,
              34,
              58,
              49,
              48,
              48,
              44,
              34,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              119,
              111,
              114,
              107,
              108,
              111,
              97,
              100,
              34,
              58,
              48,
              44,
              34,
              115,
              112,
              101,
              99,
              105,
              97,
              108,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              115,
              34,
              58,
              123,
              34,
              100,
              111,
              109,
              97,
              105,
              110,
              115,
              34,
              58,
              91,
              34,
              115,
              111,
              102,
              116,
              119,
              97,
              114,
              101,
              95,
              100,
              101,
              118,
              101,
              108,
              111,
              112,
              109,
              101,
              110,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              95,
              109,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              34,
              93,
              44,
              34,
              105,
              110,
              100,
              117,
              115,
              116,
              114,
              105,
              101,
              115,
              34,
              58,
              91,
              34,
              116,
              101,
              99,
              104,
              110,
              111,
              108,
              111,
              103,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              114,
              116,
              117,
              112,
              34,
              93,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              97,
              103,
              101,
              110,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              123,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              51,
              49,
              84,
              49,
              57,
              58,
              51,
              53,
              58,
              53,
              50,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              80,
              114,
              111,
              100,
              117,
              99,
              116,
              32,
              79,
              119,
              110,
              101,
              114,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              65,
              73,
              32,
              80,
              114,
              111,
              100,
              117,
              99,
              116,
              32,
              79,
              119,
              110,
              101,
              114,
              32,
              97,
              103,
              101,
              110,
              116,
              32,
              102,
              111,
              114,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              109,
              101,
              110,
              116,
              115,
              32,
              103,
              97,
              116,
              104,
              101,
              114,
              105,
              110,
              103,
              34,
              44,
              34,
              99,
              97,
              112,
              97,
              98,
              105,
              108,
              105,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              115,
              107,
              105,
              108,
              108,
              115,
              34,
              58,
              91,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              109,
              101,
              110,
              116,
              115,
              95,
              97,
              110,
              97,
              108,
              121,
              115,
              105,
              115,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              115,
              116,
              111,
              114,
              121,
              95,
              99,
              114,
              101,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              115,
              116,
              97,
              107,
              101,
              104,
              111,
              108,
              100,
              101,
              114,
              95,
              99,
              111,
              109,
              109,
              117,
              110,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              93,
              44,
              34,
              116,
              111,
              111,
              108,
              115,
              34,
              58,
              91,
              34,
              106,
              105,
              114,
              97,
              34,
              44,
              34,
              115,
              108,
              97,
              99,
              107,
              34,
              44,
              34,
              111,
              112,
              101,
              110,
              97,
              105,
              34,
              93,
              44,
              34,
              105,
              110,
              116,
              101,
              103,
              114,
              97,
              116,
              105,
              111,
              110,
              115,
              34,
              58,
              91,
              34,
              97,
              116,
              108,
              97,
              115,
              115,
              105,
              97,
              110,
              34,
              44,
              34,
              115,
              108,
              97,
              99,
              107,
              95,
              97,
              112,
              105,
              34,
              93,
              125,
              44,
              34,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              95,
              112,
              114,
              101,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              109,
              109,
              117,
              110,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              95,
              115,
              116,
              121,
              108,
              101,
              34,
              58,
              34,
              99,
              111,
              108,
              108,
              97,
              98,
              111,
              114,
              97,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              119,
              111,
              114,
              107,
              95,
              104,
              111,
              117,
              114,
              115,
              34,
              58,
              34,
              50,
              52,
              47,
              55,
              34,
              125,
              44,
              34,
              100,
              101,
              102,
              97,
              117,
              108,
              116,
              95,
              99,
              111,
              110,
              102,
              105,
              103,
              34,
              58,
              123,
              34,
              109,
              97,
              120,
              95,
              99,
              111,
              110,
              99,
              117,
              114,
              114,
              101,
              110,
              116,
              95,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              34,
              58,
              51,
              44,
              34,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              95,
              116,
              105,
              109,
              101,
              95,
              115,
              108,
              97,
              34,
              58,
              34,
              53,
              109,
              105,
              110,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              105,
              115,
              95,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              97,
              110,
              99,
              101,
              95,
              109,
              101,
              116,
              114,
              105,
              99,
              115,
              34,
              58,
              110,
              117,
              108,
              108,
              125
            ]
          },
          "cookie": [],
          "responseTime": 21,
          "responseSize": 1001
        },
        "id": "d1d9b9f9-0e68-4921-a526-54e444ef75eb",
        "assertions": [
          {
            "assertion": "‚úÖ Agent created successfully",
            "skipped": false
          },
          {
            "assertion": "‚úÖ Agent response format",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a445ac99-7652-4c0b-8a4c-d2e469759b55",
          "length": 8,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "10b23e40-77c0-492e-8dcb-c2357afca5cf"
        },
        "item": {
          "id": "d1637fc8-0be4-4f3f-8c45-1a8f1163e6c2",
          "name": "Create Team",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "teams"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "{{content_type}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Core Development Team\",\n  \"description\": \"Primary development team for AgentTeam project\",\n  \"project_id\": {{project_id}},\n  \"team_lead_id\": {{agent_id}},\n  \"configuration\": {\n    \"meeting_schedule\": \"daily_standup\",\n    \"communication_channels\": [\"slack\", \"jira\"]\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9fb6ddf0-768b-4d56-a510-dd7531a61eee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('‚úÖ Team created successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('‚úÖ Team response format', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('name');",
                  "    pm.collectionVariables.set('team_id', response.id);",
                  "    console.log('üë• Created team ID:', response.id);",
                  "});"
                ],
                "_lastExecutionId": "dc3b0fd1-1293-4e51-90d9-05766629f7bf"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "teams"
            ],
            "host": [
              "backend"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9701f7dd-3f63-4134-98dc-be444bd85f64",
              "system": true
            },
            {
              "key": "Host",
              "value": "backend:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "259",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"Core Development Team\",\n  \"description\": \"Primary development team for AgentTeam project\",\n  \"project_id\": 2,\n  \"team_lead_id\": 2,\n  \"configuration\": {\n    \"meeting_schedule\": \"daily_standup\",\n    \"communication_channels\": [\"slack\", \"jira\"]\n  }\n}"
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "546c41c4-a5b3-4831-bba4-184dc709804c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 31 Aug 2025 19:35:52 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "299"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              51,
              49,
              84,
              49,
              57,
              58,
              51,
              53,
              58,
              53,
              51,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              111,
              114,
              101,
              32,
              68,
              101,
              118,
              101,
              108,
              111,
              112,
              109,
              101,
              110,
              116,
              32,
              84,
              101,
              97,
              109,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              80,
              114,
              105,
              109,
              97,
              114,
              121,
              32,
              100,
              101,
              118,
              101,
              108,
              111,
              112,
              109,
              101,
              110,
              116,
              32,
              116,
              101,
              97,
              109,
              32,
              102,
              111,
              114,
              32,
              65,
              103,
              101,
              110,
              116,
              84,
              101,
              97,
              109,
              32,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              116,
              101,
              97,
              109,
              95,
              108,
              101,
              97,
              100,
              95,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              99,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              109,
              101,
              101,
              116,
              105,
              110,
              103,
              95,
              115,
              99,
              104,
              101,
              100,
              117,
              108,
              101,
              34,
              58,
              34,
              100,
              97,
              105,
              108,
              121,
              95,
              115,
              116,
              97,
              110,
              100,
              117,
              112,
              34,
              44,
              34,
              99,
              111,
              109,
              109,
              117,
              110,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              95,
              99,
              104,
              97,
              110,
              110,
              101,
              108,
              115,
              34,
              58,
              91,
              34,
              115,
              108,
              97,
              99,
              107,
              34,
              44,
              34,
              106,
              105,
              114,
              97,
              34,
              93,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              105,
              115,
              95,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 24,
          "responseSize": 299
        },
        "id": "d1637fc8-0be4-4f3f-8c45-1a8f1163e6c2",
        "assertions": [
          {
            "assertion": "‚úÖ Team created successfully",
            "skipped": false
          },
          {
            "assertion": "‚úÖ Team response format",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e16de69a-472d-4011-a8f0-a5a7610274f5",
          "length": 8,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "292e44d1-7713-4fba-adfd-f24a19e74d4b"
        },
        "item": {
          "id": "4c9ac1e2-624f-482d-a49c-a653143a31a0",
          "name": "Create Workflow",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "workflows"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "{{content_type}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Requirements Gathering Workflow\",\n  \"description\": \"Standard workflow for gathering and processing project requirements\",\n  \"project_id\": {{project_id}},\n  \"assigned_team_id\": {{team_id}},\n  \"primary_agent_id\": {{agent_id}},\n  \"definition\": {\n    \"nodes\": [\n      {\n        \"id\": \"start\",\n        \"type\": \"start\",\n        \"name\": \"Requirements Gathering Start\"\n      },\n      {\n        \"id\": \"analyze_goal\",\n        \"type\": \"task\",\n        \"name\": \"Analyze Project Goal\",\n        \"agent_type\": \"product_owner\"\n      },\n      {\n        \"id\": \"create_stories\",\n        \"type\": \"task\",\n        \"name\": \"Create User Stories\",\n        \"agent_type\": \"product_owner\"\n      },\n      {\n        \"id\": \"complete\",\n        \"type\": \"end\",\n        \"name\": \"Requirements Complete\"\n      }\n    ],\n    \"edges\": [\n      {\"from\": \"start\", \"to\": \"analyze_goal\"},\n      {\"from\": \"analyze_goal\", \"to\": \"create_stories\"},\n      {\"from\": \"create_stories\", \"to\": \"complete\"}\n    ]\n  },\n  \"agent_requirements\": {\n    \"required_agent_types\": [\"product_owner\"],\n    \"estimated_duration\": \"2-4 hours\"\n  },\n  \"status\": \"active\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0317bb92-f94a-4a26-b08b-05540fbcbec7",
                "type": "text/javascript",
                "exec": [
                  "pm.test('‚úÖ Workflow created successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('‚úÖ Workflow response format', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('name');",
                  "    pm.expect(response).to.have.property('definition');",
                  "    pm.collectionVariables.set('workflow_id', response.id);",
                  "    console.log('‚ö° Created workflow ID:', response.id);",
                  "});"
                ],
                "_lastExecutionId": "538c5642-31ce-4f51-9025-066e7f155611"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "workflows"
            ],
            "host": [
              "backend"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "15836900-0350-482b-954f-da58f114d3e1",
              "system": true
            },
            {
              "key": "Host",
              "value": "backend:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "1078",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"Requirements Gathering Workflow\",\n  \"description\": \"Standard workflow for gathering and processing project requirements\",\n  \"project_id\": 2,\n  \"assigned_team_id\": 2,\n  \"primary_agent_id\": 2,\n  \"definition\": {\n    \"nodes\": [\n      {\n        \"id\": \"start\",\n        \"type\": \"start\",\n        \"name\": \"Requirements Gathering Start\"\n      },\n      {\n        \"id\": \"analyze_goal\",\n        \"type\": \"task\",\n        \"name\": \"Analyze Project Goal\",\n        \"agent_type\": \"product_owner\"\n      },\n      {\n        \"id\": \"create_stories\",\n        \"type\": \"task\",\n        \"name\": \"Create User Stories\",\n        \"agent_type\": \"product_owner\"\n      },\n      {\n        \"id\": \"complete\",\n        \"type\": \"end\",\n        \"name\": \"Requirements Complete\"\n      }\n    ],\n    \"edges\": [\n      {\"from\": \"start\", \"to\": \"analyze_goal\"},\n      {\"from\": \"analyze_goal\", \"to\": \"create_stories\"},\n      {\"from\": \"create_stories\", \"to\": \"complete\"}\n    ]\n  },\n  \"agent_requirements\": {\n    \"required_agent_types\": [\"product_owner\"],\n    \"estimated_duration\": \"2-4 hours\"\n  },\n  \"status\": \"active\"\n}"
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "8ce44f49-642d-40ef-a7e4-d78ef1a995c5",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 31 Aug 2025 19:35:52 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "888"
            },
            {
              "key": "content-type",
              "value": "application/json"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              51,
              49,
              84,
              49,
              57,
              58,
              51,
              53,
              58,
              53,
              51,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              101,
              113,
              117,
              105,
              114,
              101,
              109,
              101,
              110,
              116,
              115,
              32,
              71,
              97,
              116,
              104,
              101,
              114,
              105,
              110,
              103,
              32,
              87,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              83,
              116,
              97,
              110,
              100,
              97,
              114,
              100,
              32,
              119,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              32,
              102,
              111,
              114,
              32,
              103,
              97,
              116,
              104,
              101,
              114,
              105,
              110,
              103,
              32,
              97,
              110,
              100,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              105,
              110,
              103,
              32,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              109,
              101,
              110,
              116,
              115,
              34,
              44,
              34,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              95,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              116,
              101,
              109,
              112,
              108,
              97,
              116,
              101,
              95,
              105,
              100,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              97,
              115,
              115,
              105,
              103,
              110,
              101,
              100,
              95,
              116,
              101,
              97,
              109,
              95,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              112,
              114,
              105,
              109,
              97,
              114,
              121,
              95,
              97,
              103,
              101,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              100,
              101,
              102,
              105,
              110,
              105,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              110,
              111,
              100,
              101,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              115,
              116,
              97,
              114,
              116,
              34,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              97,
              114,
              116,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              101,
              113,
              117,
              105,
              114,
              101,
              109,
              101,
              110,
              116,
              115,
              32,
              71,
              97,
              116,
              104,
              101,
              114,
              105,
              110,
              103,
              32,
              83,
              116,
              97,
              114,
              116,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              97,
              110,
              97,
              108,
              121,
              122,
              101,
              95,
              103,
              111,
              97,
              108,
              34,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              97,
              115,
              107,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              110,
              97,
              108,
              121,
              122,
              101,
              32,
              80,
              114,
              111,
              106,
              101,
              99,
              116,
              32,
              71,
              111,
              97,
              108,
              34,
              44,
              34,
              97,
              103,
              101,
              110,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              95,
              111,
              119,
              110,
              101,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              95,
              115,
              116,
              111,
              114,
              105,
              101,
              115,
              34,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              97,
              115,
              107,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              114,
              101,
              97,
              116,
              101,
              32,
              85,
              115,
              101,
              114,
              32,
              83,
              116,
              111,
              114,
              105,
              101,
              115,
              34,
              44,
              34,
              97,
              103,
              101,
              110,
              116,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              95,
              111,
              119,
              110,
              101,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              34,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              101,
              110,
              100,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              101,
              113,
              117,
              105,
              114,
              101,
              109,
              101,
              110,
              116,
              115,
              32,
              67,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              34,
              125,
              93,
              44,
              34,
              101,
              100,
              103,
              101,
              115,
              34,
              58,
              91,
              123,
              34,
              102,
              114,
              111,
              109,
              34,
              58,
              34,
              115,
              116,
              97,
              114,
              116,
              34,
              44,
              34,
              116,
              111,
              34,
              58,
              34,
              97,
              110,
              97,
              108,
              121,
              122,
              101,
              95,
              103,
              111,
              97,
              108,
              34,
              125,
              44,
              123,
              34,
              102,
              114,
              111,
              109,
              34,
              58,
              34,
              97,
              110,
              97,
              108,
              121,
              122,
              101,
              95,
              103,
              111,
              97,
              108,
              34,
              44,
              34,
              116,
              111,
              34,
              58,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              95,
              115,
              116,
              111,
              114,
              105,
              101,
              115,
              34,
              125,
              44,
              123,
              34,
              102,
              114,
              111,
              109,
              34,
              58,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              95,
              115,
              116,
              111,
              114,
              105,
              101,
              115,
              34,
              44,
              34,
              116,
              111,
              34,
              58,
              34,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              34,
              125,
              93,
              125,
              44,
              34,
              97,
              103,
              101,
              110,
              116,
              95,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              109,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              95,
              97,
              103,
              101,
              110,
              116,
              95,
              116,
              121,
              112,
              101,
              115,
              34,
              58,
              91,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              95,
              111,
              119,
              110,
              101,
              114,
              34,
              93,
              44,
              34,
              101,
              115,
              116,
              105,
              109,
              97,
              116,
              101,
              100,
              95,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              50,
              45,
              52,
              32,
              104,
              111,
              117,
              114,
              115,
              34,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              98,
              121,
              34,
              58,
              110,
              117,
              108,
              108,
              125
            ]
          },
          "cookie": [],
          "responseTime": 22,
          "responseSize": 888
        },
        "id": "4c9ac1e2-624f-482d-a49c-a653143a31a0",
        "assertions": [
          {
            "assertion": "‚úÖ Workflow created successfully",
            "skipped": false
          },
          {
            "assertion": "‚úÖ Workflow response format",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "601be1a4-c998-4339-b8e4-566b0db67537",
          "length": 8,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5dc04d2e-ab7c-4d68-aeab-1b63c187facc"
        },
        "item": {
          "id": "139bcbbd-b782-445e-8bb4-1c90956ff293",
          "name": "Get API Documentation",
          "request": {
            "url": {
              "path": [
                "docs"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "545af7df-fb7f-4752-a152-3f4916a823ea",
                "type": "text/javascript",
                "exec": [
                  "pm.test('‚úÖ API documentation accessible', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.headers.get('content-type')).to.include('text/html');",
                  "});",
                  "",
                  "console.log('üìö FastAPI documentation is available at /docs');"
                ],
                "_lastExecutionId": "ddba3724-6aa5-4488-89bc-7ffb414da865"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "docs"
            ],
            "host": [
              "backend"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dda0d3a0-39c2-48e6-bbe5-7b57f8d7d6b7",
              "system": true
            },
            {
              "key": "Host",
              "value": "backend:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "189ad34a-8b50-4c54-ba1a-9176c4ad68fb",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sun, 31 Aug 2025 19:35:53 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "950"
            },
            {
              "key": "content-type",
              "value": "text/html; charset=utf-8"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              10,
              32,
              32,
              32,
              32,
              60,
              33,
              68,
              79,
              67,
              84,
              89,
              80,
              69,
              32,
              104,
              116,
              109,
              108,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              104,
              116,
              109,
              108,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              104,
              101,
              97,
              100,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              108,
              105,
              110,
              107,
              32,
              116,
              121,
              112,
              101,
              61,
              34,
              116,
              101,
              120,
              116,
              47,
              99,
              115,
              115,
              34,
              32,
              114,
              101,
              108,
              61,
              34,
              115,
              116,
              121,
              108,
              101,
              115,
              104,
              101,
              101,
              116,
              34,
              32,
              104,
              114,
              101,
              102,
              61,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              106,
              115,
              100,
              101,
              108,
              105,
              118,
              114,
              46,
              110,
              101,
              116,
              47,
              110,
              112,
              109,
              47,
              115,
              119,
              97,
              103,
              103,
              101,
              114,
              45,
              117,
              105,
              45,
              100,
              105,
              115,
              116,
              64,
              53,
              46,
              57,
              46,
              48,
              47,
              115,
              119,
              97,
              103,
              103,
              101,
              114,
              45,
              117,
              105,
              46,
              99,
              115,
              115,
              34,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              108,
              105,
              110,
              107,
              32,
              114,
              101,
              108,
              61,
              34,
              115,
              104,
              111,
              114,
              116,
              99,
              117,
              116,
              32,
              105,
              99,
              111,
              110,
              34,
              32,
              104,
              114,
              101,
              102,
              61,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              102,
              97,
              115,
              116,
              97,
              112,
              105,
              46,
              116,
              105,
              97,
              110,
              103,
              111,
              108,
              111,
              46,
              99,
              111,
              109,
              47,
              105,
              109,
              103,
              47,
              102,
              97,
              118,
              105,
              99,
              111,
              110,
              46,
              112,
              110,
              103,
              34,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              116,
              105,
              116,
              108,
              101,
              62,
              87,
              111,
              114,
              107,
              102,
              108,
              111,
              119,
              32,
              65,
              100,
              109,
              105,
              110,
              32,
              65,
              80,
              73,
              32,
              45,
              32,
              83,
              119,
              97,
              103,
              103,
              101,
              114,
              32,
              85,
              73,
              60,
              47,
              116,
              105,
              116,
              108,
              101,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              47,
              104,
              101,
              97,
              100,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              98,
              111,
              100,
              121,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              100,
              105,
              118,
              32,
              105,
              100,
              61,
              34,
              115,
              119,
              97,
              103,
              103,
              101,
              114,
              45,
              117,
              105,
              34,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              47,
              100,
              105,
              118,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              115,
              99,
              114,
              105,
              112,
              116,
              32,
              115,
              114,
              99,
              61,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              106,
              115,
              100,
              101,
              108,
              105,
              118,
              114,
              46,
              110,
              101,
              116,
              47,
              110,
              112,
              109,
              47,
              115,
              119,
              97,
              103,
              103,
              101,
              114,
              45,
              117,
              105,
              45,
              100,
              105,
              115,
              116,
              64,
              53,
              46,
              57,
              46,
              48,
              47,
              115,
              119,
              97,
              103,
              103,
              101,
              114,
              45,
              117,
              105,
              45,
              98,
              117,
              110,
              100,
              108,
              101,
              46,
              106,
              115,
              34,
              62,
              60,
              47,
              115,
              99,
              114,
              105,
              112,
              116,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              33,
              45,
              45,
              32,
              96,
              83,
              119,
              97,
              103,
              103,
              101,
              114,
              85,
              73,
              66,
              117,
              110,
              100,
              108,
              101,
              96,
              32,
              105,
              115,
              32,
              110,
              111,
              119,
              32,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              32,
              111,
              110,
              32,
              116,
              104,
              101,
              32,
              112,
              97,
              103,
              101,
              32,
              45,
              45,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              115,
              99,
              114,
              105,
              112,
              116,
              62,
              10,
              32,
              32,
              32,
              32,
              99,
              111,
              110,
              115,
              116,
              32,
              117,
              105,
              32,
              61,
              32,
              83,
              119,
              97,
              103,
              103,
              101,
              114,
              85,
              73,
              66,
              117,
              110,
              100,
              108,
              101,
              40,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              117,
              114,
              108,
              58,
              32,
              39,
              47,
              111,
              112,
              101,
              110,
              97,
              112,
              105,
              46,
              106,
              115,
              111,
              110,
              39,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              100,
              111,
              109,
              95,
              105,
              100,
              34,
              58,
              32,
              34,
              35,
              115,
              119,
              97,
              103,
              103,
              101,
              114,
              45,
              117,
              105,
              34,
              44,
              10,
              34,
              108,
              97,
              121,
              111,
              117,
              116,
              34,
              58,
              32,
              34,
              66,
              97,
              115,
              101,
              76,
              97,
              121,
              111,
              117,
              116,
              34,
              44,
              10,
              34,
              100,
              101,
              101,
              112,
              76,
              105,
              110,
              107,
              105,
              110,
              103,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              34,
              115,
              104,
              111,
              119,
              69,
              120,
              116,
              101,
              110,
              115,
              105,
              111,
              110,
              115,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              34,
              115,
              104,
              111,
              119,
              67,
              111,
              109,
              109,
              111,
              110,
              69,
              120,
              116,
              101,
              110,
              115,
              105,
              111,
              110,
              115,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              111,
              97,
              117,
              116,
              104,
              50,
              82,
              101,
              100,
              105,
              114,
              101,
              99,
              116,
              85,
              114,
              108,
              58,
              32,
              119,
              105,
              110,
              100,
              111,
              119,
              46,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              46,
              111,
              114,
              105,
              103,
              105,
              110,
              32,
              43,
              32,
              39,
              47,
              100,
              111,
              99,
              115,
              47,
              111,
              97,
              117,
              116,
              104,
              50,
              45,
              114,
              101,
              100,
              105,
              114,
              101,
              99,
              116,
              39,
              44,
              10,
              32,
              32,
              32,
              32,
              112,
              114,
              101,
              115,
              101,
              116,
              115,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              83,
              119,
              97,
              103,
              103,
              101,
              114,
              85,
              73,
              66,
              117,
              110,
              100,
              108,
              101,
              46,
              112,
              114,
              101,
              115,
              101,
              116,
              115,
              46,
              97,
              112,
              105,
              115,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              83,
              119,
              97,
              103,
              103,
              101,
              114,
              85,
              73,
              66,
              117,
              110,
              100,
              108,
              101,
              46,
              83,
              119,
              97,
              103,
              103,
              101,
              114,
              85,
              73,
              83,
              116,
              97,
              110,
              100,
              97,
              108,
              111,
              110,
              101,
              80,
              114,
              101,
              115,
              101,
              116,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              44,
              10,
              32,
              32,
              32,
              32,
              125,
              41,
              10,
              32,
              32,
              32,
              32,
              60,
              47,
              115,
              99,
              114,
              105,
              112,
              116,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              47,
              98,
              111,
              100,
              121,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              47,
              104,
              116,
              109,
              108,
              62,
              10,
              32,
              32,
              32,
              32
            ]
          },
          "cookie": [],
          "responseTime": 7,
          "responseSize": 950
        },
        "id": "139bcbbd-b782-445e-8bb4-1c90956ff293",
        "assertions": [
          {
            "assertion": "‚úÖ API documentation accessible",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 4320
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "‚úÖ Pagination response format",
          "message": "expected [ { ‚Ä¶(6) }, { ‚Ä¶(6) } ] to have property 'items'",
          "stack": "AssertionError: expected [ { ‚Ä¶(6) }, { ‚Ä¶(6) } ] to have property 'items'\n   at Object.eval sandbox-script.js:2:3)",
          "checksum": "63ae40578dc3bdc336ef0752ebb80463",
          "id": "74a196d2-9138-46eb-831b-d86ccb210599",
          "timestamp": 1756668951624,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "0909eb87-976b-4f67-a755-e195a808b36a",
          "name": "Get Projects",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "projects"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "skip",
                  "value": "0"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d420614-2169-423c-8852-7fe3b1810621",
                "type": "text/javascript",
                "exec": [
                  "pm.test('‚úÖ Get projects returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('‚úÖ Pagination response format', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('items');",
                  "    pm.expect(response).to.have.property('total');",
                  "    pm.expect(response).to.have.property('page');",
                  "    pm.expect(response.items).to.be.an('array');",
                  "    pm.expect(response.total).to.be.at.least(1);",
                  "});"
                ],
                "_lastExecutionId": "5be1eb19-cf1b-4d3b-864d-096855f0ebf9"
              }
            }
          ]
        },
        "parent": {
          "item": [
            {
              "id": "33120b2e-5287-44ad-a4e3-330af6d3ba97",
              "name": "Health Check",
              "request": {
                "url": {
                  "path": [
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "142a37c7-1009-4ee5-8bea-d7cfe0d586a9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('‚úÖ Health check returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('‚úÖ Health check response format', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response).to.have.property('status');",
                      "    pm.expect(response).to.have.property('database');",
                      "});"
                    ],
                    "_lastExecutionId": "3a4021f8-3951-48d8-96ef-32213b319d99"
                  }
                }
              ]
            },
            {
              "id": "77d1d128-ad71-418a-961f-23f45bad253e",
              "name": "Create Project",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "projects"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "{{content_type}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Test Project\",\n  \"description\": \"A test project for API validation\",\n  \"settings\": {\n    \"priority\": \"high\",\n    \"category\": \"testing\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "67e448f5-a833-4d55-bf31-f1c24668cd01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('‚úÖ Project created successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('‚úÖ Project response format', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response).to.have.property('id');",
                      "    pm.expect(response).to.have.property('name');",
                      "    pm.collectionVariables.set('project_id', response.id);",
                      "    console.log('üìù Created project ID:', response.id);",
                      "});"
                    ],
                    "_lastExecutionId": "bf981776-2e5e-434f-88cb-f61947332290"
                  }
                }
              ]
            },
            {
              "id": "0909eb87-976b-4f67-a755-e195a808b36a",
              "name": "Get Projects",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "projects"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "skip",
                      "value": "0"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8d420614-2169-423c-8852-7fe3b1810621",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('‚úÖ Get projects returns 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('‚úÖ Pagination response format', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response).to.have.property('items');",
                      "    pm.expect(response).to.have.property('total');",
                      "    pm.expect(response).to.have.property('page');",
                      "    pm.expect(response.items).to.be.an('array');",
                      "    pm.expect(response.total).to.be.at.least(1);",
                      "});"
                    ],
                    "_lastExecutionId": "5be1eb19-cf1b-4d3b-864d-096855f0ebf9"
                  }
                }
              ]
            },
            {
              "id": "b6689602-8651-4eb0-844e-76ce2b280061",
              "name": "Create Agent Type",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "agents",
                    "types"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "{{content_type}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Product Owner\",\n  \"description\": \"AI Product Owner agent for requirements gathering\",\n  \"capabilities\": {\n    \"skills\": [\"requirements_analysis\", \"user_story_creation\", \"stakeholder_communication\"],\n    \"tools\": [\"jira\", \"slack\", \"openai\"],\n    \"integrations\": [\"atlassian\", \"slack_api\"]\n  },\n  \"workflow_preferences\": {\n    \"communication_style\": \"collaborative\",\n    \"work_hours\": \"24/7\"\n  },\n  \"default_config\": {\n    \"max_concurrent_projects\": 3,\n    \"response_time_sla\": \"5min\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ff357a0a-6787-4f67-af8c-181cc12f05ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('‚úÖ Agent type created successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('‚úÖ Agent type response format', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response).to.have.property('id');",
                      "    pm.expect(response).to.have.property('name');",
                      "    pm.collectionVariables.set('agent_type_id', response.id);",
                      "    console.log('ü§ñ Created agent type ID:', response.id);",
                      "});"
                    ],
                    "_lastExecutionId": "a7e4bf6b-9453-458b-ad88-f96a0473a4f1"
                  }
                }
              ]
            },
            {
              "id": "d1d9b9f9-0e68-4921-a526-54e444ef75eb",
              "name": "Create Agent",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "agents"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "{{content_type}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"AgentIan\",\n  \"agent_type_id\": {{agent_type_id}},\n  \"description\": \"Primary Product Owner agent for project requirements\",\n  \"configuration\": {\n    \"slack_channel\": \"#agent-team\",\n    \"jira_project\": \"AT\",\n    \"openai_model\": \"gpt-4o-mini\"\n  },\n  \"status\": \"active\",\n  \"workload_capacity\": 100,\n  \"specializations\": {\n    \"domains\": [\"software_development\", \"project_management\"],\n    \"industries\": [\"technology\", \"startup\"]\n  },\n  \"credentials\": {\n    \"jira_token\": \"redacted\",\n    \"slack_token\": \"redacted\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a1ed8e4-9ed4-4a8f-960b-952234fe2ef2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('‚úÖ Agent created successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('‚úÖ Agent response format', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response).to.have.property('id');",
                      "    pm.expect(response).to.have.property('name');",
                      "    pm.expect(response).to.have.property('agent_type_id');",
                      "    pm.collectionVariables.set('agent_id', response.id);",
                      "    console.log('ü§ñ Created agent ID:', response.id);",
                      "});"
                    ],
                    "_lastExecutionId": "44983d03-a1da-4c54-bf9e-b940cc343a53"
                  }
                }
              ]
            },
            {
              "id": "d1637fc8-0be4-4f3f-8c45-1a8f1163e6c2",
              "name": "Create Team",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "teams"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "{{content_type}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Core Development Team\",\n  \"description\": \"Primary development team for AgentTeam project\",\n  \"project_id\": {{project_id}},\n  \"team_lead_id\": {{agent_id}},\n  \"configuration\": {\n    \"meeting_schedule\": \"daily_standup\",\n    \"communication_channels\": [\"slack\", \"jira\"]\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9fb6ddf0-768b-4d56-a510-dd7531a61eee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('‚úÖ Team created successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('‚úÖ Team response format', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response).to.have.property('id');",
                      "    pm.expect(response).to.have.property('name');",
                      "    pm.collectionVariables.set('team_id', response.id);",
                      "    console.log('üë• Created team ID:', response.id);",
                      "});"
                    ],
                    "_lastExecutionId": "dc3b0fd1-1293-4e51-90d9-05766629f7bf"
                  }
                }
              ]
            },
            {
              "id": "4c9ac1e2-624f-482d-a49c-a653143a31a0",
              "name": "Create Workflow",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "workflows"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "{{content_type}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Requirements Gathering Workflow\",\n  \"description\": \"Standard workflow for gathering and processing project requirements\",\n  \"project_id\": {{project_id}},\n  \"assigned_team_id\": {{team_id}},\n  \"primary_agent_id\": {{agent_id}},\n  \"definition\": {\n    \"nodes\": [\n      {\n        \"id\": \"start\",\n        \"type\": \"start\",\n        \"name\": \"Requirements Gathering Start\"\n      },\n      {\n        \"id\": \"analyze_goal\",\n        \"type\": \"task\",\n        \"name\": \"Analyze Project Goal\",\n        \"agent_type\": \"product_owner\"\n      },\n      {\n        \"id\": \"create_stories\",\n        \"type\": \"task\",\n        \"name\": \"Create User Stories\",\n        \"agent_type\": \"product_owner\"\n      },\n      {\n        \"id\": \"complete\",\n        \"type\": \"end\",\n        \"name\": \"Requirements Complete\"\n      }\n    ],\n    \"edges\": [\n      {\"from\": \"start\", \"to\": \"analyze_goal\"},\n      {\"from\": \"analyze_goal\", \"to\": \"create_stories\"},\n      {\"from\": \"create_stories\", \"to\": \"complete\"}\n    ]\n  },\n  \"agent_requirements\": {\n    \"required_agent_types\": [\"product_owner\"],\n    \"estimated_duration\": \"2-4 hours\"\n  },\n  \"status\": \"active\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0317bb92-f94a-4a26-b08b-05540fbcbec7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('‚úÖ Workflow created successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('‚úÖ Workflow response format', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response).to.have.property('id');",
                      "    pm.expect(response).to.have.property('name');",
                      "    pm.expect(response).to.have.property('definition');",
                      "    pm.collectionVariables.set('workflow_id', response.id);",
                      "    console.log('‚ö° Created workflow ID:', response.id);",
                      "});"
                    ],
                    "_lastExecutionId": "538c5642-31ce-4f51-9025-066e7f155611"
                  }
                }
              ]
            },
            {
              "id": "139bcbbd-b782-445e-8bb4-1c90956ff293",
              "name": "Get API Documentation",
              "request": {
                "url": {
                  "path": [
                    "docs"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "545af7df-fb7f-4752-a152-3f4916a823ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('‚úÖ API documentation accessible', function () {",
                      "    pm.response.to.have.status(200);",
                      "    pm.expect(pm.response.headers.get('content-type')).to.include('text/html');",
                      "});",
                      "",
                      "console.log('üìö FastAPI documentation is available at /docs');"
                    ],
                    "_lastExecutionId": "ddba3724-6aa5-4488-89bc-7ffb414da865"
                  }
                }
              ]
            }
          ],
          "auth": {
            "type": "noauth",
            "noauth": []
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "4eb1ad12-7d0c-482e-a70e-c14f40834aa4",
                "type": "text/javascript",
                "exec": [
                  "console.log('üöÄ FastAPI CRUD Test Suite Starting...');"
                ],
                "_lastExecutionId": "eb4c01a2-acd8-4984-beca-93f8706c89d8"
              }
            }
          ],
          "variable": [
            {
              "type": "any",
              "value": "",
              "key": "project_id"
            },
            {
              "type": "any",
              "value": "",
              "key": "agent_type_id"
            },
            {
              "type": "any",
              "value": "",
              "key": "agent_id"
            },
            {
              "type": "any",
              "value": "",
              "key": "team_id"
            },
            {
              "type": "any",
              "value": "",
              "key": "workflow_id"
            }
          ],
          "info": {
            "_postman_id": "caead472-2270-438b-951a-c581e22d9ab1",
            "name": "FastAPI CRUD Tests",
            "version": {
              "raw": "1.0.0",
              "major": 1,
              "minor": 0,
              "patch": 0,
              "prerelease": [],
              "build": [],
              "string": "1.0.0"
            },
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Test suite for Workflow Admin FastAPI CRUD endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "de829513-082e-4808-ae48-b2d40dd51d3f",
          "length": 8,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7e3a6c5a-4cbf-4760-9c25-2f95304f1c5d",
          "scriptId": "8d420614-2169-423c-8852-7fe3b1810621",
          "execution": "5be1eb19-cf1b-4d3b-864d-096855f0ebf9"
        }
      }
    ],
    "error": null
  }
}